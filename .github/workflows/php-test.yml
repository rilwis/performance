name: PHP Unit Tests

on:
  push:
    branches:
      - trunk
      - 'release/**'
    # TODO: Add paths.
  pull_request:
    # TODO: Add paths.
    types:
      - opened
      - reopened
      - synchronize

permissions: {}

env:
  WP_CORE_DIR: /tmp/wordpress
  WP_TESTS_DIR: /tmp/wordpress-tests-lib
  WP_ENVIRONMENT_TYPE: local

jobs:
  pre-run:
    name: 'Pre Run'
    runs-on: ubuntu-latest
    outputs:
      plugins: ${{ steps.get-plugins.outputs.plugins }}
      environment: ${{ steps.set-environment.outputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get plugins
        id: get-plugins
        run: |
          echo "plugins=$(jq -r '.plugins' plugins.json)" >> $GITHUB_OUTPUT

      - name: Set environment matrix
        id: set-environment
        run: |
          echo "environment=[
            { php: '7.0', phpunit: '6', wp: 'latest' },
            { php: '7.1', phpunit: '7', wp: 'latest' },
            { php: '7.2', phpunit: '7', wp: 'latest' },
            { php: '7.3', phpunit: '7', wp: 'latest' },
            { php: '7.4', phpunit: '9.3', wp: 'latest' },
            { php: '8.0', phpunit: '9.3', wp: 'latest' },
            { php: '8.1', phpunit: '9.6', wp: 'latest' },
            { php: '8.2', phpunit: '9.6', wp: 'latest' },
          ]" >> $GITHUB_OUTPUT

  perflab-unit-tests:
    name: "PerfLab / PHP ${{ matrix.environment.php }} / WP ${{ matrix.environment.wp }} ${{ 'true' == matrix.multisite && '/ Multisite' || ''}}"
    needs: pre-run
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      mysql:
        image: mariadb:latest
        env:
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
          MARIADB_DATABASE: wordpress_test
          MARIADB_MYSQL_LOCALHOST_USER: 1
          MARIADB_MYSQL_LOCALHOST_GRANTS: USAGE
        ports:
          - 3306
        options: --health-cmd="healthcheck.sh --su-mysql --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        multisite: ['true', 'false']
        environment: ${{ needs.pre-run.outputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup WP tests
        uses: ./.github/actions/setup-wp-tests
        with:
          wp: ${{ matrix.environment.wp }}
          php: ${{ matrix.environment.php }}
          phpunit: ${{ matrix.environment.phpunit }}
          multisite-tests: ${{ matrix.multisite }}
          mysql-port: ${{ job.services.mysql.ports['3306'] }}

      - name: Run ${{ 'true' == matrix.multisite && 'Multisite' || 'Single Site' }} tests
        shell: bash
        run: |
          phpunit ${{ 'true' == matrix.multisite && '--exclude-group=ms-excluded' || '' }} --verbose
        working-directory: ${{ env.WP_CORE_DIR }}/src/wp-content/plugins/performance
        env:
          WP_MULTISITE: ${{ 'true' == matrix.multisite && 1 || 0 }}

  plugins-unit-tests:
    name: "Plugin: ${{ matrix.plugin }} / PHP ${{ matrix.environment.php }} / WP ${{ matrix.environment.wp }} ${{ 'true' == matrix.multisite && '/ Multisite' || ''}}"
    needs: pre-run
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      mysql:
        image: mariadb:latest
        env:
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
          MARIADB_DATABASE: wordpress_test
          MARIADB_MYSQL_LOCALHOST_USER: 1
          MARIADB_MYSQL_LOCALHOST_GRANTS: USAGE
        ports:
          - 3306
        options: --health-cmd="healthcheck.sh --su-mysql --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        plugin: ${{ needs.pre-run.outputs.plugins }}
        environment: ${{ needs.pre-run.outputs.environment }}
        includes:
          - multisite: 'true'
          - multisite: 'false'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup WP tests
        uses: ./.github/actions/setup-wp-tests
        with:
          wp: ${{ matrix.environment.wp }}
          php: ${{ matrix.environment.php }}
          phpunit: ${{ matrix.environment.phpunit }}
          multisite-tests: ${{ matrix.environment.multisite }}
          mysql-port: ${{ job.services.mysql.ports['3306'] }}

      - name: Run ${{ 'true' == matrix.environment.multisite && 'Multisite' || 'Single Site' }} tests
        shell: bash
        run: |
          phpunit ${{ 'true' == matrix.multisite && '--exclude-group=ms-excluded' || '' }} --verbose
        working-directory: ${{ env.WP_CORE_DIR }}/src/wp-content/plugins/performance/plugins/${{ matrix.plugin }}
        env:
          WP_MULTISITE: ${{ 'true' == matrix.multisite && 1 || 0 }}
